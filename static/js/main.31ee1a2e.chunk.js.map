{"version":3,"sources":["static/wip.svg","static/chef.svg","static/aboutapp.svg","static/image1.png","static/image2.png","static/pencil.svg","static/foodie.png","static/prototype.svg","static/finalprototype.svg","static/blueprint.jpg","static/party.png","static/IPM_47326_47872_48550_50054.pdf","static sync nonrecursive /.(png|jpe?g|svg)$","components/navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","images","image1","image2","Navbar","props","imagesLogo","r","require","console","log","openLightbox","index","event","setState","isOpen","photoIndex","visible","generateThumbnail","img","i","src","className","classes","logoImages","onClick","showGoUp","el","document","getElementById","rect","getBoundingClientRect","top","bottom","goUp","isScrolledIntoView","isVisible","elemTop","elemBottom","window","innerHeight","state","isLogoView","jumpTo","scrollIntoView","behavior","render","AppBar","style","background","elevation","position","width","borderBottom","height","display","textAlign","Typography","variant","margin","Toolbar","padding","foodie","right","Button","menuButtons","paddingTop","flexGrow","marginTop","marginLeft","color","fontWeight","backgroundColor","borderRadius","chef","beforeInjection","svg","classList","add","setAttribute","header","aboutapp","flex","svgContent","skewDiv","Avatar","marginBottom","pencil","pencilSvg","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","prototypeBackground","marginRight","prototype","prototypeSvg","verticalAlign","wip","backgroundImage","party","backgroundSize","backgroundRepeat","zIndex","finalprototype","finalPrototype","paddingBottom","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","Divider","component","href","pdf","borderColor","Fab","prevScrollpos","pageYOffset","addEventListener","this","removeEventListener","React","withStyles","createStyles","float","transform","content","cursor","blueprint","backgroundPosition","App","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31ee1a2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wip.b357e5f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chef.cbdcbd50.svg\";","module.exports = __webpack_public_path__ + \"static/media/aboutapp.f05c5add.svg\";","module.exports = __webpack_public_path__ + \"static/media/image1.f0b52bfd.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.043d3152.png\";","module.exports = __webpack_public_path__ + \"static/media/pencil.3fff934a.svg\";","module.exports = __webpack_public_path__ + \"static/media/foodie.25cd53f8.png\";","module.exports = __webpack_public_path__ + \"static/media/prototype.619465be.svg\";","module.exports = __webpack_public_path__ + \"static/media/finalprototype.9de188fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/blueprint.d51f4ffe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/party.6704a3cb.png\";","module.exports = __webpack_public_path__ + \"static/media/IPM_47326_47872_48550_50054.3150de5c.pdf\";","var map = {\n\t\"./aboutapp.svg\": 25,\n\t\"./blueprint.jpg\": 32,\n\t\"./chef.svg\": 24,\n\t\"./finalprototype.svg\": 31,\n\t\"./foodie.png\": 29,\n\t\"./image1.png\": 26,\n\t\"./image2.png\": 27,\n\t\"./party.png\": 33,\n\t\"./pencil.svg\": 28,\n\t\"./prototype.svg\": 30,\n\t\"./wip.svg\": 18\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 76;","import * as React from 'react';\r\nimport { AppBar, Typography, Toolbar, Button, createStyles, WithStyles, Avatar, Fab, Icon, List, ListItem, ListItemAvatar, ListItemText, Divider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport chef from '../static/chef.svg';\r\nimport aboutapp from '../static/aboutapp.svg';\r\nimport ReactSVG from 'react-svg'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport image1 from '../static/image1.png';\r\nimport image2 from '../static/image2.png';\r\nimport pencil from '../static/pencil.svg';\r\nimport foodie from '../static/foodie.png';\r\nimport prototype from '../static/prototype.svg';\r\nimport wip from '../static/wip.svg';\r\nimport finalprototype from '../static/finalprototype.svg';\r\nimport blueprint from '../static/blueprint.jpg';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport party from '../static/party.png';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n// @ts-ignore\r\nimport pdf from '../static/IPM_47326_47872_48550_50054.pdf';\r\n\r\nconst images = [\r\n    image1,\r\n    image2,\r\n];\r\n\r\nconst styles = () => createStyles({\r\n    menuButtons: {\r\n        color: 'white',\r\n        marginRight: '30px'\r\n    },\r\n    svg: {\r\n        width: '75vh',\r\n        float: 'right',\r\n        marginRight: '7%',\r\n    },\r\n    svgContent: {\r\n        width: '300px',\r\n        height: '300px',\r\n        float: 'left',\r\n        marginRight: '7%',\r\n    },\r\n    header: {\r\n        width: '100%',\r\n        height: '62vh',\r\n        background: 'radial-gradient(circle at 50% -300%,#FF8401 90%,transparent 90.1%),radial-gradient(circle at 60% -300%,#ffae57 90%,transparent 90.1%)'\r\n    },\r\n    skewDiv: {\r\n        position: 'relative',\r\n        paddingTop: '60px',\r\n        '&::before': {\r\n            width: '100%',\r\n            height: '180%',\r\n            transform: 'skewY(-8deg)',\r\n            background: '#f6f9fc',\r\n            position: 'absolute',\r\n            content: '\"\"',\r\n            zIndex: -1,\r\n            top: 0\r\n        }\r\n    },\r\n    logoImages: {\r\n        width: '200px',\r\n        height: '200px',\r\n        cursor: 'pointer',\r\n        marginRight: '25px'\r\n    },\r\n    pencilSvg: {\r\n        width: '50px',\r\n        height: '50px'\r\n    },\r\n    prototypeSvg: {\r\n        width: '40px',\r\n        height: '40px',\r\n    },\r\n    wip: {\r\n        width: '20%'\r\n    },\r\n    prototypeBackground: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        marginTop: '90px',\r\n        padding: '50px',\r\n        zIndex: 1,\r\n        backgroundImage: `url(${blueprint})`,\r\n        backgroundPosition: 'center'\r\n    },\r\n    finalPrototype: {\r\n        width: '40px',\r\n        height: '40px',\r\n        marginTop: '5px'\r\n    },\r\n})\r\n\r\nexport interface State {\r\n    prevScrollpos: number;\r\n    visible: boolean;\r\n    photoIndex: number;\r\n    isOpen: boolean;\r\n    isLogoView: boolean;\r\n    goUp: boolean;\r\n}\r\n\r\ntype PropsAndStyles = WithStyles<typeof styles>;\r\n\r\nexport class Navbar extends React.Component<PropsAndStyles, State> {\r\n    constructor(props: PropsAndStyles) {\r\n        super(props)\r\n        this.state = {\r\n            prevScrollpos: window.pageYOffset,\r\n            visible: true,\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n            isLogoView: false,\r\n            goUp: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.isScrolledIntoView);\r\n        window.addEventListener(\"scroll\", this.showGoUp);\r\n        this.imagesLogo();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.isScrolledIntoView);\r\n        window.removeEventListener(\"scroll\", this.showGoUp);\r\n    }\r\n\r\n    imagesLogo = () => {\r\n        const r = require.context('../static/', false, /\\.(png|jpe?g|svg)$/);\r\n        console.log(r);\r\n    }\r\n    /*handleScroll = () => {\r\n        const { prevScrollpos } = this.state;\r\n\r\n        const currentScrollPos = window.pageYOffset;\r\n        const visible = prevScrollpos > currentScrollPos;\r\n\r\n        this.setState({\r\n            prevScrollpos: currentScrollPos,\r\n            visible\r\n        });\r\n    }; */\r\n\r\n    openLightbox = (index: number) => (event: React.MouseEvent<HTMLImageElement>) => {\r\n        this.setState({\r\n            isOpen: true,\r\n            photoIndex: index,\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    generateThumbnail = () => {\r\n        return images.map((img, i) => <img src={img} className={this.props.classes.logoImages} onClick={this.openLightbox(i)} />)\r\n    }\r\n\r\n    showGoUp = () => {\r\n        const el = document.getElementById('logo');\r\n        if (el) {\r\n            const rect = el.getBoundingClientRect();\r\n            const elemTop = rect.top;\r\n\r\n            console.log(rect.top, rect.bottom);\r\n            this.setState({\r\n                goUp: rect.bottom < 1400\r\n            });\r\n        }\r\n    }\r\n\r\n    isScrolledIntoView = () => {\r\n        const el = document.getElementById('logo');\r\n        let isVisible = false;\r\n        if (el) {\r\n            const rect = el.getBoundingClientRect();\r\n            const elemTop = rect.top;\r\n            const elemBottom = rect.bottom;\r\n\r\n            isVisible = elemTop + 80 < window.innerHeight && elemBottom >= 0;\r\n\r\n        }\r\n        if (isVisible !== this.state.isLogoView) {\r\n            this.setState({\r\n                isLogoView: isVisible\r\n            });\r\n        }\r\n    }\r\n\r\n    jumpTo = (id: string) => (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        const el = document.getElementById(id);\r\n\r\n        if (el) {\r\n            el.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        const { classes } = this.props;\r\n        const { photoIndex } = this.state;\r\n        return (\r\n\r\n            <div id={'root'}>\r\n                <AppBar style={{ background: 'transparent' }} elevation={0} position={'absolute'}>\r\n                    <div style={{\r\n                        width: '100%', background: 'transparent', borderBottom: '1px solid white', height: '30px', display: 'block',\r\n                        textAlign: 'right'\r\n                    }}>\r\n                        <Typography variant={'caption'} style={{ margin: '5px 10px 5px 0' }}>Interação Pessoa Máquina 19/20</Typography>\r\n                    </div>\r\n                    <Toolbar style={{ padding: '10px' }}>\r\n                        <img src={foodie} />\r\n                        <div style={{ right: '20px', position: 'absolute' }}>\r\n                            <Button className={classes.menuButtons} onClick={this.jumpTo('about')}>Sobre a App</Button>\r\n                            <Button className={classes.menuButtons} onClick={this.jumpTo('logo')}>Logótipo</Button>\r\n                            <Button className={classes.menuButtons} onClick={this.jumpTo('firstprototype')}>1º Protótipo</Button>\r\n                            <Button className={classes.menuButtons} onClick={this.jumpTo('finalprototype')}>Protótipo Final</Button>\r\n                            <Button className={classes.menuButtons} onClick={this.jumpTo('aboutus')}>Sobre Grupo</Button>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div style={{ height: '20vh', width: '100%', background: '#FF8401', display: 'flex', paddingTop: '50px' }}>\r\n                    <div style={{ flexGrow: 1, marginTop: '10%', marginLeft: '5%' }}>\r\n                        <Typography variant={'h2'} style={{ color: 'white', fontWeight: 'bolder' }}>Cozinhe os melhores pratos.</Typography>\r\n                        <Typography variant={'h5'} style={{ color: 'white' }}>E conheça as melhores pessoas no caminho.</Typography>\r\n                        <Button style={{ backgroundColor: 'white', borderRadius: '25px', marginTop: '30px' }}>Descobrir agora</Button>\r\n                    </div>\r\n                    <ReactSVG src={chef}\r\n                        style={{ flexGrow: 1 }}\r\n                        beforeInjection={svg => {\r\n                            svg.classList.add(classes.svg)\r\n                            svg.setAttribute('style', 'viewbox: 0 125 903.77 657.14')\r\n                        }} />\r\n                </div>\r\n                <div className={classes.header} />\r\n                <div style={{ padding: '100px' }} id={'about'}>\r\n                    <Typography variant={'h4'}>Sobre a App</Typography>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <ReactSVG src={aboutapp}\r\n                            style={{ display: 'inline-block', flex: 0.45 }}\r\n                            beforeInjection={svg => {\r\n                                svg.classList.add(classes.svgContent)\r\n                            }} />\r\n                        <div style={{ display: 'inline-block', flex: 1, paddingTop: '35px' }}>{`A Foodie é uma aplicação feita por cozinheiros para cozinheiros,\r\n                        idealizada para permitir não só que alguém que tenha interesse em cozinha possa conectar-se com outras pessoas, como também, procurar\r\n                        as melhores receitas.\r\n                        É possível interagir socialmente com outras pessoas através das receitas que colocam na aplicação, sendo que um utilizador pode\r\n                        comentar, avaliar, reagir e experimentar uma receita, tal como colocar a sua própria receita para que outros possam interagir. Assim,\r\n                        é possível tirar duvidas, dar dicas e tudo mais que for necessário.`}\r\n                            <br /><br />\r\n                            {` Outro aspeto incorporado nesta aplicação é a possibilidade de realizar compras de acordo com os ingredientes estipulados\r\n                        pelo utilizador que colocou a receita, tal como, a realização de gestão dos ingredientes que o utilizador tem.`} </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.skewDiv} id={'logo'}>\r\n                    <div style={{ position: 'relative', textAlign: 'center' }}>\r\n\r\n                        <Avatar style={{ backgroundColor: '#fcc07e', width: '50px', height: '50px', margin: '0 auto', marginBottom: '15px' }}>\r\n                            {this.state.isLogoView && <ReactSVG src={pencil}\r\n                                beforeInjection={svg => {\r\n                                    svg.classList.add(classes.pencilSvg)\r\n                                }} />}\r\n                        </Avatar>\r\n                        <Typography variant={'h5'}>Evolução Logotipo</Typography>\r\n                    </div>\r\n                    <div style={{ padding: '25px 100px 0px 100px' }}>\r\n                        <div style={{ marginBottom: '20px' }}>{`Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                        Suspendisse mi nisi, rhoncus ac tristique sed, sodales at nisi. Proin nec interdum dolor. \r\n                        Morbi fringilla porta nisi, quis scelerisque tortor commodo a. Phasellus nec purus a enim placerat fringilla. \r\n                        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla at turpis massa. \r\n                        Etiam in aliquet augue, euismod commodo dui. Suspendisse in dui maximus, mattis tortor a, varius nisl.`}\r\n                        </div>\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            {this.generateThumbnail()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.state.isOpen && <Lightbox\r\n\r\n                        mainSrc={images[photoIndex]}\r\n                        nextSrc={images[(photoIndex + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                        onCloseRequest={() => this.setState({ isOpen: false, visible: true })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + images.length - 1) % images.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + 1) % images.length,\r\n                            })\r\n                        }\r\n                    />}\r\n                </div>\r\n                <div className={classes.prototypeBackground} id={'firstprototype'}>\r\n                    <div style={{ display: 'table' }}>\r\n                        <Avatar style={{ backgroundColor: '#FF8401', width: '60px', height: '60px', marginRight: '20px' }}>\r\n                            <ReactSVG src={prototype}\r\n                                beforeInjection={svg => {\r\n                                    svg.classList.add(classes.prototypeSvg)\r\n                                }} />\r\n                        </Avatar>\r\n                        <Typography variant={'h4'} style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n                            Primeiro Protótipo\r\n                            </Typography>\r\n                    </div>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <ReactSVG src={wip}\r\n                            beforeInjection={svg => {\r\n                                svg.classList.add(classes.wip)\r\n                            }} />\r\n                        <Typography>⚠️ Os protótipos são um trabalho em progresso. Por favor verifique mais tarde! ⚠️</Typography>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundImage: `url(${party})`, backgroundSize: '90%', backgroundRepeat: 'no-repeat', zIndex: 1, height: '400px', padding: '50px' }}\r\n                    id={'finalprototype'}>\r\n                    <div style={{ display: 'table' }}>\r\n                        <Avatar style={{ backgroundColor: '#FF8401', width: '60px', height: '60px', marginRight: '20px' }}>\r\n                            <ReactSVG src={finalprototype}\r\n                                beforeInjection={svg => {\r\n                                    svg.classList.add(classes.finalPrototype)\r\n                                }} />\r\n                        </Avatar>\r\n                        <Typography variant={'h4'} style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n                            Protótipo Final\r\n                            </Typography>\r\n                    </div>\r\n                    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                        <ReactSVG src={wip}\r\n                            beforeInjection={svg => {\r\n                                svg.classList.add(classes.wip)\r\n                            }} />\r\n                        <Typography>⚠️ Os protótipos são um trabalho em progresso. Por favor verifique mais tarde! ⚠️</Typography>\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: '#FAFAFA', zIndex: 1, height: '400px', padding: '50px', paddingBottom: '200px' }}\r\n                    id={'aboutus'}>\r\n                    <div style={{ display: 'table' }}>\r\n                        <Avatar style={{ backgroundColor: '#FF8401', width: '60px', height: '60px', marginRight: '20px' }}>\r\n                            <PeopleIcon />\r\n                        </Avatar>\r\n                        <Typography variant={'h4'} style={{ display: 'table-cell', verticalAlign: 'middle' }}>\r\n                            Sobre Grupo\r\n                            </Typography>\r\n                    </div>\r\n                    <List>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>R</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<b>Rúben Rebelo</b>}\r\n                                secondary={<Typography>\r\n                                    Nº 47326\r\n                                </Typography>} />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\" />\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>S</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<b>Sara Fernandes</b>}\r\n                                secondary={<Typography>\r\n                                    Nº 47872\r\n                                </Typography>} />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\" />\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>L</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<b>Luís Coelho</b>}\r\n                                secondary={<Typography>\r\n                                    Nº 48550\r\n                                </Typography>} />\r\n                        </ListItem>\r\n                        <Divider variant=\"inset\" component=\"li\" />\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar>D</Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={<b>Diogo Escaleira</b>}\r\n                                secondary={<Typography>\r\n                                    Nº 50054\r\n                                </Typography>} />\r\n                        </ListItem>\r\n                    </List>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Avatar style={{ backgroundColor: '#ffae57' }}>1ºR</Avatar><Typography style={{ flex: 1, marginTop: '5px', marginLeft: 10 }}>Primeiro Relatório:\r\n                       </Typography>\r\n                    </div>\r\n                    <Button href={pdf} variant={'outlined'} style={{ borderColor: '#FF8401', color: '#FF8401', marginLeft: '50px' }}>Clicar aqui</Button>\r\n                </div>\r\n                {this.state.goUp && <Fab onClick={this.jumpTo('root')}\r\n                    id={'scrollButton'} style={{ position: 'fixed', bottom: '20px', right: '20px', zIndex: 3 }}>\r\n                    <ArrowUpward />\r\n                </Fab>}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar';\n\nconst App: React.FC = () => {\n  return (\n    <Navbar />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}