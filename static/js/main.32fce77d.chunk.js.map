{"version":3,"sources":["static/chef.svg","static/aboutapp.svg","static/image1.png","static/image2.png","components/navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","images","image1","image2","Navbar","props","openLightbox","index","event","setState","isOpen","photoIndex","visible","generateThumbnail","map","img","i","src","className","classes","logoImages","onClick","render","state","AppBar","style","background","elevation","position","width","borderBottom","height","display","textAlign","Typography","variant","margin","Toolbar","right","Button","menuButtons","paddingTop","flexGrow","marginTop","marginLeft","chef","beforeInjection","svg","classList","add","setAttribute","header","padding","aboutapp","flex","svgContent","skewDiv","Avatar","backgroundColor","marginBottom","icon","faPencilAlt","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","prevScrollpos","window","pageYOffset","React","withStyles","createStyles","color","float","marginRight","transform","content","zIndex","top","cursor","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32fce77d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef.cbdcbd50.svg\";","module.exports = __webpack_public_path__ + \"static/media/aboutapp.f05c5add.svg\";","module.exports = __webpack_public_path__ + \"static/media/image1.f0b52bfd.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.043d3152.png\";","import * as React from 'react';\r\nimport { AppBar, Typography, Toolbar, Button, createStyles, WithStyles, Avatar } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport chef from '../static/chef.svg';\r\nimport aboutapp from '../static/aboutapp.svg';\r\nimport ReactSVG from 'react-svg'\r\nimport Lightbox from 'react-image-lightbox';\r\nimport 'react-image-lightbox/style.css';\r\nimport image1 from '../static/image1.png';\r\nimport image2 from '../static/image2.png'; import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst images = [\r\n    image1,\r\n    image2,\r\n];\r\n\r\nconst styles = () => createStyles({\r\n    menuButtons: {\r\n        color: 'white'\r\n    },\r\n    svg: {\r\n        width: '550px',\r\n        float: 'right',\r\n        marginRight: '7%',\r\n    },\r\n    svgContent: {\r\n        width: '300px',\r\n        height: '300px',\r\n        float: 'left',\r\n        marginRight: '7%',\r\n    },\r\n    header: {\r\n        width: '100%',\r\n        height: '400px',\r\n        background: 'radial-gradient(circle at 50% -300%,#FF8401 90%,transparent 90.1%),radial-gradient(circle at 60% -300%,#ffae57 90%,transparent 90.1%)'\r\n    },\r\n    skewDiv: {\r\n        position: 'relative',\r\n        paddingTop: '60px',\r\n        '&::before': {\r\n            width: '100%',\r\n            height: '180%',\r\n            transform: 'skewY(-12deg)',\r\n            background: '#f6f9fc',\r\n            position: 'absolute',\r\n            content: '\"\"',\r\n            zIndex: -1,\r\n            top: 0\r\n        }\r\n    },\r\n    logoImages: {\r\n        width: '200px',\r\n        height: '200px',\r\n        cursor: 'pointer'\r\n    }\r\n})\r\n\r\nexport interface State {\r\n    prevScrollpos: number;\r\n    visible: boolean;\r\n    photoIndex: number;\r\n    isOpen: boolean;\r\n}\r\n\r\ntype PropsAndStyles = WithStyles<typeof styles>;\r\n\r\nexport class Navbar extends React.Component<PropsAndStyles, State> {\r\n    constructor(props: PropsAndStyles) {\r\n        super(props)\r\n        this.state = {\r\n            prevScrollpos: window.pageYOffset,\r\n            visible: true,\r\n            photoIndex: 0,\r\n            isOpen: false,\r\n        }\r\n    }\r\n\r\n    /* componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        const { prevScrollpos } = this.state;\r\n\r\n        const currentScrollPos = window.pageYOffset;\r\n        const visible = prevScrollpos > currentScrollPos;\r\n\r\n        this.setState({\r\n            prevScrollpos: currentScrollPos,\r\n            visible\r\n        });\r\n    }; */\r\n\r\n    openLightbox = (index: number) => (event: React.MouseEvent<HTMLImageElement>) => {\r\n        this.setState({\r\n            isOpen: true,\r\n            photoIndex: index,\r\n            visible: false\r\n        })\r\n    }\r\n\r\n    generateThumbnail = () => {\r\n        return images.map((img, i) => <img src={img} className={this.props.classes.logoImages} onClick={this.openLightbox(i)} />)\r\n    }\r\n\r\n    render = () => {\r\n        const { classes } = this.props;\r\n        const { photoIndex } = this.state;\r\n        return (\r\n\r\n            <div>\r\n                <AppBar style={{ background: 'transparent' }} elevation={0} position={'absolute'}>\r\n                    <div style={{\r\n                        width: '100%', background: 'transparent', borderBottom: '1px solid white', height: '30px', display: 'block',\r\n                        textAlign: 'right'\r\n                    }}>\r\n                        <Typography variant={'caption'} style={{ margin: '5px 10px 5px 0' }}>Interação Pessoa Máquina 19/20</Typography>\r\n                    </div>\r\n                    <Toolbar>\r\n                        <Typography variant={'h4'}>Cooking</Typography>\r\n                        <div style={{ right: '20px', position: 'absolute' }}>\r\n                            <Button className={classes.menuButtons}>Sobre a App</Button>\r\n                            <Button className={classes.menuButtons}>Sobre nós</Button>\r\n                            <Button className={classes.menuButtons}>1º Protótipo</Button>\r\n                            <Button className={classes.menuButtons}>Logo</Button>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div style={{ height: 190, width: '100%', background: '#FF8401', display: 'flex', paddingTop: '50px' }}>\r\n                    <div style={{ flexGrow: 1, marginTop: '10%', marginLeft: '5%' }}>\r\n                        <Typography variant={'h2'}>Find a cooking date. </Typography>\r\n                        <Typography variant={'h5'}>Right now. Anywhere.</Typography>\r\n                    </div>\r\n                    <ReactSVG src={chef}\r\n                        style={{ flexGrow: 1 }}\r\n                        beforeInjection={svg => {\r\n                            svg.classList.add(classes.svg)\r\n                            svg.setAttribute('style', 'viewbox: 0 125 903.77 657.14')\r\n                        }} />\r\n                </div>\r\n                <div className={classes.header} />\r\n                <div style={{ padding: '100px' }}>\r\n                    <Typography variant={'h4'}>About app</Typography>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <ReactSVG src={aboutapp}\r\n                            style={{ display: 'inline-block', flex: 0.45 }}\r\n                            beforeInjection={svg => {\r\n                                svg.classList.add(classes.svgContent)\r\n                            }} />\r\n                        <div style={{ display: 'inline-block', flex: 1, paddingTop: '35px' }}>{`Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                        Suspendisse mi nisi, rhoncus ac tristique sed, sodales at nisi. Proin nec interdum dolor. \r\n                        Morbi fringilla porta nisi, quis scelerisque tortor commodo a. Phasellus nec purus a enim placerat fringilla. \r\n                        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla at turpis massa. \r\n                        Etiam in aliquet augue, euismod commodo dui. Suspendisse in dui maximus, mattis tortor a, varius nisl.`} </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.skewDiv}>\r\n                    <div style={{ position: 'relative', textAlign: 'center' }}>\r\n                        <Avatar style={{ backgroundColor: '#fcc07e', width: '50px', height: '50px', margin: '0 auto', marginBottom: '15px' }}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </Avatar>\r\n                        <Typography variant={'h5'}> Logo Evolution</Typography>\r\n                    </div>\r\n                    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n                        {`Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                        Suspendisse mi nisi, rhoncus ac tristique sed, sodales at nisi. Proin nec interdum dolor. \r\n                        Morbi fringilla porta nisi, quis scelerisque tortor commodo a. Phasellus nec purus a enim placerat fringilla. \r\n                        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nulla at turpis massa. \r\n                        Etiam in aliquet augue, euismod commodo dui. Suspendisse in dui maximus, mattis tortor a, varius nisl.`}\r\n                        <div>\r\n                            {this.generateThumbnail()}\r\n                        </div>\r\n                    </div>\r\n                    {this.state.isOpen && <Lightbox\r\n\r\n                        mainSrc={images[photoIndex]}\r\n                        nextSrc={images[(photoIndex + 1) % images.length]}\r\n                        prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                        onCloseRequest={() => this.setState({ isOpen: false, visible: true })}\r\n                        onMovePrevRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + images.length - 1) % images.length,\r\n                            })\r\n                        }\r\n                        onMoveNextRequest={() =>\r\n                            this.setState({\r\n                                photoIndex: (photoIndex + 1) % images.length,\r\n                            })\r\n                        }\r\n                    />}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);","import React from 'react';\nimport './App.css';\nimport Navbar from './components/navbar';\n\nconst App: React.FC = () => {\n  return (\n    <Navbar />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}